{
  "service": {
    "service": "car-pool-service",
    "serviceObject": {
      "name": "car-pool-service"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "nodejs12.x",
      "region": "eu-west-2",
      "apiGateway": {
        "minimumCompressionSize": 1024,
        "restApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "environment": {
        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": 1,
        "CAR_TABLE": "Car-dev",
        "CAR_TABLE_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev",
        "CAR_TABLE_INDEXES_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev/index/*",
        "CAR_PICTURE_S3_BUCKET": "car-pool-picture-upload-bucket-dev",
        "SIGNED_URL_EXPIRATION": 300,
        "CAR_OWNER_INDEX_NAME": "car-owner-index",
        "BOOKING_TABLE": "Booking-dev",
        "BOOKING_TABLE_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Booking-dev",
        "BOOKING_DATE_INDEX_NAME": "booking-date-index"
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GetPhotoUploadUrlLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/car-pool-service-dev-GetPhotoUploadUrl"
            }
          },
          "DeleteCarLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/car-pool-service-dev-DeleteCar"
            }
          },
          "GetUserCarsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/car-pool-service-dev-GetUserCars"
            }
          },
          "CreateCarLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/car-pool-service-dev-CreateCar"
            }
          },
          "UpdateCarLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/car-pool-service-dev-UpdateCar"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "car-pool-service",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/car-pool-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/car-pool-service-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "car-pool-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetPhotoUploadUrlLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/car-pool-service/dev/1579212662794-2020-01-16T22:11:02.794Z/car-pool-service.zip"
              },
              "FunctionName": "car-pool-service-dev-GetPhotoUploadUrl",
              "Handler": "src/lambda/http/getPhotoUploadUrl.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": 1,
                  "CAR_TABLE": "Car-dev",
                  "CAR_TABLE_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev",
                  "CAR_TABLE_INDEXES_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev/index/*",
                  "CAR_PICTURE_S3_BUCKET": "car-pool-picture-upload-bucket-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "CAR_OWNER_INDEX_NAME": "car-owner-index",
                  "BOOKING_TABLE": "Booking-dev",
                  "BOOKING_TABLE_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Booking-dev",
                  "BOOKING_DATE_INDEX_NAME": "booking-date-index"
                }
              }
            },
            "DependsOn": [
              "GetPhotoUploadUrlLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "GetPhotoUploadUrlLambdaVersionD2AngSUxPLNr0g1s1PhiAugilaG9PJFbvCRw5yPH0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetPhotoUploadUrlLambdaFunction"
              },
              "CodeSha256": "VvAElGwqVs9+afPq6ZFVzC3cwZpW1QNamf93OzT1fVk="
            }
          },
          "DeleteCarLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/car-pool-service/dev/1579212662794-2020-01-16T22:11:02.794Z/car-pool-service.zip"
              },
              "FunctionName": "car-pool-service-dev-DeleteCar",
              "Handler": "src/lambda/http/deleteCar.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "DeleteCarIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": 1,
                  "CAR_TABLE": "Car-dev",
                  "CAR_TABLE_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev",
                  "CAR_TABLE_INDEXES_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev/index/*",
                  "CAR_PICTURE_S3_BUCKET": "car-pool-picture-upload-bucket-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "CAR_OWNER_INDEX_NAME": "car-owner-index",
                  "BOOKING_TABLE": "Booking-dev",
                  "BOOKING_TABLE_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Booking-dev",
                  "BOOKING_DATE_INDEX_NAME": "booking-date-index"
                }
              }
            },
            "DependsOn": [
              "DeleteCarIamRoleLambdaExecution",
              "DeleteCarLogGroup"
            ]
          },
          "DeleteCarLambdaVersionhNGfQGhOIZ254BOalkqB6EB6bn7Voicr4W9IXXG4Q": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteCarLambdaFunction"
              },
              "CodeSha256": "VvAElGwqVs9+afPq6ZFVzC3cwZpW1QNamf93OzT1fVk="
            }
          },
          "GetUserCarsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/car-pool-service/dev/1579212662794-2020-01-16T22:11:02.794Z/car-pool-service.zip"
              },
              "FunctionName": "car-pool-service-dev-GetUserCars",
              "Handler": "src/lambda/http/getUserCars.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "GetUserCarsIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": 1,
                  "CAR_TABLE": "Car-dev",
                  "CAR_TABLE_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev",
                  "CAR_TABLE_INDEXES_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev/index/*",
                  "CAR_PICTURE_S3_BUCKET": "car-pool-picture-upload-bucket-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "CAR_OWNER_INDEX_NAME": "car-owner-index",
                  "BOOKING_TABLE": "Booking-dev",
                  "BOOKING_TABLE_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Booking-dev",
                  "BOOKING_DATE_INDEX_NAME": "booking-date-index"
                }
              }
            },
            "DependsOn": [
              "GetUserCarsIamRoleLambdaExecution",
              "GetUserCarsLogGroup"
            ]
          },
          "GetUserCarsLambdaVersionaZJlzFoGLwNbnFryJdH1zoOoTobuAytneF9mcxiI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUserCarsLambdaFunction"
              },
              "CodeSha256": "VvAElGwqVs9+afPq6ZFVzC3cwZpW1QNamf93OzT1fVk="
            }
          },
          "CreateCarLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/car-pool-service/dev/1579212662794-2020-01-16T22:11:02.794Z/car-pool-service.zip"
              },
              "FunctionName": "car-pool-service-dev-CreateCar",
              "Handler": "src/lambda/http/createCar.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "CreateCarIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": 1,
                  "CAR_TABLE": "Car-dev",
                  "CAR_TABLE_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev",
                  "CAR_TABLE_INDEXES_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev/index/*",
                  "CAR_PICTURE_S3_BUCKET": "car-pool-picture-upload-bucket-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "CAR_OWNER_INDEX_NAME": "car-owner-index",
                  "BOOKING_TABLE": "Booking-dev",
                  "BOOKING_TABLE_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Booking-dev",
                  "BOOKING_DATE_INDEX_NAME": "booking-date-index"
                }
              }
            },
            "DependsOn": [
              "CreateCarIamRoleLambdaExecution",
              "CreateCarLogGroup"
            ]
          },
          "CreateCarLambdaVersionsFHLY1gHfYvRsJgSFWiQwXzbzygHbWl7dDcOSgqMFNg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateCarLambdaFunction"
              },
              "CodeSha256": "VvAElGwqVs9+afPq6ZFVzC3cwZpW1QNamf93OzT1fVk="
            }
          },
          "UpdateCarLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/car-pool-service/dev/1579212662794-2020-01-16T22:11:02.794Z/car-pool-service.zip"
              },
              "FunctionName": "car-pool-service-dev-UpdateCar",
              "Handler": "src/lambda/http/updateCar.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "UpdateCarIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": 1,
                  "CAR_TABLE": "Car-dev",
                  "CAR_TABLE_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev",
                  "CAR_TABLE_INDEXES_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev/index/*",
                  "CAR_PICTURE_S3_BUCKET": "car-pool-picture-upload-bucket-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "CAR_OWNER_INDEX_NAME": "car-owner-index",
                  "BOOKING_TABLE": "Booking-dev",
                  "BOOKING_TABLE_ARN": "arn:aws:dynamodb:eu-west-2:*:table/Booking-dev",
                  "BOOKING_DATE_INDEX_NAME": "booking-date-index"
                }
              }
            },
            "DependsOn": [
              "UpdateCarIamRoleLambdaExecution",
              "UpdateCarLogGroup"
            ]
          },
          "UpdateCarLambdaVersion57Zx4MLTMwNWMLcekjqWFavNGuwRzK0po4EvPAS94s": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateCarLambdaFunction"
              },
              "CodeSha256": "VvAElGwqVs9+afPq6ZFVzC3cwZpW1QNamf93OzT1fVk="
            }
          },
          "ApiGatewayResourceCars": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "cars",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCarsLoaned": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCars"
              },
              "PathPart": "loaned",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCarsLoanedCaridVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCarsLoaned"
              },
              "PathPart": "{carId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCarsLoanedCaridVarUploadurl": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCarsLoanedCaridVar"
              },
              "PathPart": "uploadUrl",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCarsLoanedCaridVarUploadurlOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCarsLoanedCaridVarUploadurl"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCarsLoanedCaridVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT,DELETE'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCarsLoanedCaridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCarsLoanedOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCarsLoaned"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCarsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCars"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCarsLoanedCaridVarUploadurlGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCarsLoanedCaridVarUploadurl"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetPhotoUploadUrlLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodCarsLoanedCaridVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCarsLoanedCaridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteCarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodCarsLoanedGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCarsLoaned"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetUserCarsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodCarsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCars"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateCarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "RequestBodyValidator"
              },
              "RequestModels": {
                "application/json": "CarRequest"
              }
            },
            "DependsOn": [
              "CarRequestModel"
            ]
          },
          "ApiGatewayMethodCarsLoanedCaridVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCarsLoanedCaridVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateCarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1579212650803": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodCarsLoanedCaridVarUploadurlOptions",
              "ApiGatewayMethodCarsLoanedCaridVarOptions",
              "ApiGatewayMethodCarsLoanedOptions",
              "ApiGatewayMethodCarsOptions",
              "ApiGatewayMethodCarsLoanedCaridVarUploadurlGet",
              "ApiGatewayMethodCarsLoanedCaridVarDelete",
              "ApiGatewayMethodCarsLoanedGet",
              "ApiGatewayMethodCarsPost",
              "ApiGatewayMethodCarsLoanedCaridVarPut"
            ]
          },
          "GetPhotoUploadUrlLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::Join": [
                  ":",
                  [
                    {
                      "Fn::GetAtt": [
                        "GetPhotoUploadUrlLambdaFunction",
                        "Arn"
                      ]
                    }
                  ]
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteCarLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::Join": [
                  ":",
                  [
                    {
                      "Fn::GetAtt": [
                        "DeleteCarLambdaFunction",
                        "Arn"
                      ]
                    }
                  ]
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetUserCarsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::Join": [
                  ":",
                  [
                    {
                      "Fn::GetAtt": [
                        "GetUserCarsLambdaFunction",
                        "Arn"
                      ]
                    }
                  ]
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateCarLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::Join": [
                  ":",
                  [
                    {
                      "Fn::GetAtt": [
                        "CreateCarLambdaFunction",
                        "Arn"
                      ]
                    }
                  ]
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateCarLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::Join": [
                  ":",
                  [
                    {
                      "Fn::GetAtt": [
                        "UpdateCarLambdaFunction",
                        "Arn"
                      ]
                    }
                  ]
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteCarIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "car-pool-service",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/car-pool-service-dev-DeleteCar:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": "dynamodb:DeleteItem",
                        "Resource": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "car-pool-service",
                    "dev",
                    "DeleteCar",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "GetUserCarsIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "car-pool-service",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/car-pool-service-dev-GetUserCars:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": "dynamodb:Query",
                        "Resource": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev"
                      },
                      {
                        "Effect": "Allow",
                        "Action": "dynamodb:Query",
                        "Resource": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev/index/*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "car-pool-service",
                    "dev",
                    "GetUserCars",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "CreateCarIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "car-pool-service",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/car-pool-service-dev-CreateCar:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": "dynamodb:PutItem",
                        "Resource": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "car-pool-service",
                    "dev",
                    "CreateCar",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "UpdateCarIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "car-pool-service",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/car-pool-service-dev-UpdateCar:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": "dynamodb:UpdateItem",
                        "Resource": "arn:aws:dynamodb:eu-west-2:*:table/Car-dev"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "car-pool-service",
                    "dev",
                    "UpdateCar",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "CarRequestModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Name": "CarRequest",
              "Schema": "${file{models/create-car-request.json}}"
            }
          },
          "RequestBodyValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": false
            }
          },
          "CarDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "carId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "ownerId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "createdAt",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "carId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "ownerId",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "TableName": "Car-dev",
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "car-owner-index",
                  "KeySchema": [
                    {
                      "AttributeName": "ownerId",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "createdAt",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "BookingDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "bookingId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "carId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "bookDate",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "bookingId",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "TableName": "Booking-dev",
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "booking-date-index",
                  "KeySchema": [
                    {
                      "AttributeName": "carId",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "bookDate",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "UploadBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "car-pool-picture-upload-bucket-dev",
              "CorsConfiguration": {
                "CorsRules": [
                  {
                    "AllowedOrigins": [
                      "*"
                    ],
                    "AllowedHeaders": [
                      "*"
                    ],
                    "AllowedMethods": [
                      "GET",
                      "PUT",
                      "POST",
                      "DELETE",
                      "HEAD"
                    ],
                    "MaxAge": 3000
                  }
                ]
              }
            }
          },
          "BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "PolicyDocument": {
                "Id": "MyPolicy",
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "PublicReadForGetBucketObjects",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": [
                      "s3:GetObject",
                      "s3:Put*"
                    ],
                    "Resource": "arn:aws:s3:::car-pool-picture-upload-bucket-dev/*"
                  }
                ]
              },
              "Bucket": {
                "Ref": "UploadBucket"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "GetPhotoUploadUrlLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetPhotoUploadUrlLambdaVersionD2AngSUxPLNr0g1s1PhiAugilaG9PJFbvCRw5yPH0"
            }
          },
          "DeleteCarLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteCarLambdaVersionhNGfQGhOIZ254BOalkqB6EB6bn7Voicr4W9IXXG4Q"
            }
          },
          "GetUserCarsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUserCarsLambdaVersionaZJlzFoGLwNbnFryJdH1zoOoTobuAytneF9mcxiI"
            }
          },
          "CreateCarLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateCarLambdaVersionsFHLY1gHfYvRsJgSFWiQwXzbzygHbWl7dDcOSgqMFNg"
            }
          },
          "UpdateCarLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateCarLambdaVersion57Zx4MLTMwNWMLcekjqWFavNGuwRzK0po4EvPAS94s"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          },
          "AwsDocApiId": {
            "Description": "API ID",
            "Value": {
              "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "webpack": {
        "webpackConfig": "./webpack.config.js",
        "includeModules": true
      },
      "documentation": {
        "api": {
          "info": {
            "version": "v1.0.0",
            "title": "Car Pool API",
            "description": "Serverless application for loaning and hiring cars"
          }
        },
        "models": [
          {
            "name": "CarRequest",
            "contentType": "application/json",
            "schema": "${file{models/create-car-request.json}}"
          }
        ]
      }
    },
    "plugins": [
      "serverless-webpack",
      "serverless-iam-roles-per-function",
      "serverless-reqvalidator-plugin",
      "serverless-aws-documentation"
    ],
    "pluginsData": {},
    "functions": {
      "GetPhotoUploadUrl": {
        "handler": "src/lambda/http/getPhotoUploadUrl.handler",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "cars/loaned/{carId}/uploadUrl",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "car-pool-service-dev-GetPhotoUploadUrl",
        "package": {
          "artifact": ".serverless/car-pool-service.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetPhotoUploadUrlLambdaVersionD2AngSUxPLNr0g1s1PhiAugilaG9PJFbvCRw5yPH0"
      },
      "DeleteCar": {
        "handler": "src/lambda/http/deleteCar.handler",
        "events": [
          {
            "http": {
              "method": "delete",
              "path": "cars/loaned/{carId}",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DeleteCarIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "car-pool-service-dev-DeleteCar",
        "package": {
          "artifact": ".serverless/car-pool-service.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "DeleteCarLambdaVersionhNGfQGhOIZ254BOalkqB6EB6bn7Voicr4W9IXXG4Q"
      },
      "GetUserCars": {
        "handler": "src/lambda/http/getUserCars.handler",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "cars/loaned",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUserCarsIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUserCarsIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          }
        ],
        "name": "car-pool-service-dev-GetUserCars",
        "package": {
          "artifact": ".serverless/car-pool-service.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetUserCarsLambdaVersionaZJlzFoGLwNbnFryJdH1zoOoTobuAytneF9mcxiI"
      },
      "CreateCar": {
        "handler": "src/lambda/http/createCar.handler",
        "events": [
          {
            "http": {
              "method": "post",
              "path": "cars",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "reqValidatorName": "RequestBodyValidator",
              "documentation": {
                "summary": "Create car",
                "description": "Create a new car loan",
                "requestModels": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodCarsPost\"][\"Properties\"][\"RequestModels\"]"
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateCarIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "car-pool-service-dev-CreateCar",
        "package": {
          "artifact": ".serverless/car-pool-service.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "CreateCarLambdaVersionsFHLY1gHfYvRsJgSFWiQwXzbzygHbWl7dDcOSgqMFNg"
      },
      "UpdateCar": {
        "handler": "src/lambda/http/updateCar.handler",
        "events": [
          {
            "http": {
              "method": "put",
              "path": "cars/loaned/{carId}",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PUT"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateCarIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "car-pool-service-dev-UpdateCar",
        "package": {
          "artifact": ".serverless/car-pool-service.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "UpdateCarLambdaVersion57Zx4MLTMwNWMLcekjqWFavNGuwRzK0po4EvPAS94s"
      }
    },
    "resources": {
      "Resources": {
        "RequestBodyValidator": {
          "Type": "AWS::ApiGateway::RequestValidator",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ValidateRequestBody": true,
            "ValidateRequestParameters": false
          }
        },
        "CarDynamoDBTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "carId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "ownerId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "createdAt",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "carId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "ownerId",
                "KeyType": "RANGE"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "TableName": "Car-dev",
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "car-owner-index",
                "KeySchema": [
                  {
                    "AttributeName": "ownerId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "createdAt",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        },
        "BookingDynamoDBTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "bookingId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "carId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "bookDate",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "bookingId",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "TableName": "Booking-dev",
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "booking-date-index",
                "KeySchema": [
                  {
                    "AttributeName": "carId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "bookDate",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        },
        "UploadBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "car-pool-picture-upload-bucket-dev",
            "CorsConfiguration": {
              "CorsRules": [
                {
                  "AllowedOrigins": [
                    "*"
                  ],
                  "AllowedHeaders": [
                    "*"
                  ],
                  "AllowedMethods": [
                    "GET",
                    "PUT",
                    "POST",
                    "DELETE",
                    "HEAD"
                  ],
                  "MaxAge": 3000
                }
              ]
            }
          }
        },
        "BucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "PolicyDocument": {
              "Id": "MyPolicy",
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "PublicReadForGetBucketObjects",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": [
                    "s3:GetObject",
                    "s3:Put*"
                  ],
                  "Resource": "arn:aws:s3:::car-pool-picture-upload-bucket-dev/*"
                }
              ]
            },
            "Bucket": {
              "Ref": "UploadBucket"
            }
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {}
  },
  "package": {
    "artifactDirectoryName": "serverless/car-pool-service/dev/1579212662794-2020-01-16T22:11:02.794Z",
    "artifact": ""
  }
}